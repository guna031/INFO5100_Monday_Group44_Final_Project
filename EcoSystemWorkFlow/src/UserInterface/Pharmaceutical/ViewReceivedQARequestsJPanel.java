/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.Pharmaceutical;

import ecosystemworkflow.EcoSystem;
import ecosystemworkflow.Enterprise.Enterprise;
import ecosystemworkflow.Organization.Organization;
import ecosystemworkflow.UserAccount.UserAccount;
import ecosystemworkflow.WorkFlow.QualityControlAndAssuranceRequest;
import ecosystemworkflow.WorkFlow.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author gunav
 */
public class ViewReceivedQARequestsJPanel extends javax.swing.JPanel {

    private JPanel workArea;
    private UserAccount UserAccount;
    private Organization org;
    private Enterprise Enterprise;
    private EcoSystem ESystem;

    /**
     * Creates new form QualityAnalystWorkAreaJPanel
     */
    public ViewReceivedQARequestsJPanel(JPanel workArea,UserAccount userAccount,Organization org,Enterprise enterprise,EcoSystem eSystem) {
        initComponents();
        this.workArea=workArea;
        this.UserAccount=userAccount;
        this.org=org;
        this.Enterprise=enterprise;
        this.ESystem=eSystem;
        populateTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblQARequests = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        tblQARequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Batch Number", "Drug Name", "Quantity", "Production Date", "Priority", "Status", "Production Manager"
            }
        ));
        jScrollPane1.setViewportView(tblQARequests);

        jScrollPane2.setViewportView(jScrollPane1);

        jButton1.setText("Process Request");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 861, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(46, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addContainerGap(223, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblQARequests.getSelectedRow();
        if(selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select a request to process");
            return;
        }
        
        QualityControlAndAssuranceRequest request = 
            (QualityControlAndAssuranceRequest)tblQARequests.getValueAt(selectedRow, 0);
            
        ProcessQARequestJPanel processPanel = new ProcessQARequestJPanel(workArea,UserAccount, org, Enterprise, ESystem, request);
        workArea.add("ProcessQARequest", processPanel);
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.next(workArea);
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblQARequests;
    // End of variables declaration//GEN-END:variables


    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblQARequests.getModel();
        model.setRowCount(0);
        
        for(WorkRequest request : org.getWorkRequestList().getWorkRequests()) {
            if(request instanceof QualityControlAndAssuranceRequest) {
                QualityControlAndAssuranceRequest qaRequest = 
                    (QualityControlAndAssuranceRequest) request;
                Object[] row = new Object[7];
                row[0] = qaRequest.getBatchNumber();
                row[1] = qaRequest.getDrugName();
                row[2] = qaRequest.getBatchSize();
                row[3] = qaRequest.getManufacturingDate();
                row[4] = qaRequest.getStatus();
                row[5] = qaRequest.getSender().getEmployee().getEmpolyeeName();
                row[6] = qaRequest.getTestParameters().isEmpty() ? "Pending" : "In Progress";
                model.addRow(row);
            }
        }
    }
}
