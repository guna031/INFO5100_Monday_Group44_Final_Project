/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.HealthCare.User;

import UserInterface.HeathCare.User.*;
import UserInterface.HeathCare.*;
import ecosystemworkflow.EcoSystem;
import ecosystemworkflow.Enterprise.Enterprise;
import ecosystemworkflow.Organization.Organization;
import ecosystemworkflow.UserAccount.UserAccount;
import ecosystemworkflow.WorkFlow.DrugProductionRequest;
import ecosystemworkflow.WorkFlow.WorkRequest;
import java.awt.CardLayout;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author gunav
 */
public class ViewDrugRequestsJPanel extends javax.swing.JPanel {
    
    JPanel container;
    UserAccount userAccount;
    Organization organization;
    Enterprise enterprise;
    EcoSystem system;
    /**
     * Creates new form ViewDrugRequestsJPanel
     */
    public ViewDrugRequestsJPanel( JPanel container, UserAccount userAccount, 
           Organization organization,Enterprise enterprise, EcoSystem system) {
        initComponents();
        this.container = container;
        this.userAccount = userAccount;
        this.organization = organization;
        this.enterprise = enterprise;
        this.system = system;
        populateTable();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonUpdateReq = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDrugRequests = new javax.swing.JTable();
        btnDeleteReq = new javax.swing.JButton();
        btnRefresh = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        buttonUpdateReq.setText("Update Request");
        buttonUpdateReq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUpdateReqActionPerformed(evt);
            }
        });

        tblDrugRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Request ID", "Drug Name", "Requested Quantity", "Status", "Request Date", "Expected Delivery Date", "Priority", "Sender "
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDrugRequests);

        jScrollPane2.setViewportView(jScrollPane1);

        btnDeleteReq.setText("Delete Request");
        btnDeleteReq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteReqActionPerformed(evt);
            }
        });

        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        btnBack.setText("back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRefresh)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonUpdateReq)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDeleteReq)
                .addGap(71, 71, 71))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 961, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(btnBack)))
                .addContainerGap(72, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(125, 125, 125)
                .addComponent(btnBack)
                .addGap(34, 34, 34)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonUpdateReq)
                    .addComponent(btnDeleteReq)
                    .addComponent(btnRefresh))
                .addContainerGap(458, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buttonUpdateReqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUpdateReqActionPerformed
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_buttonUpdateReqActionPerformed

    private void btnDeleteReqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteReqActionPerformed
    int selectedRow = tblDrugRequests.getSelectedRow();
    if(selectedRow < 0) {
        JOptionPane.showMessageDialog(this, "Please select a request to cancel");
        return;
    }
    
    DefaultTableModel model = (DefaultTableModel) tblDrugRequests.getModel();
    DrugProductionRequest request = (DrugProductionRequest)model.getValueAt(selectedRow, 0);
    
    if(request.getStatus().equals("Completed") || 
       request.getStatus().equals("Rejected") ||
       request.getStatus().equals("In Production")) {
        JOptionPane.showMessageDialog(this, 
            "Cannot cancel request that is already " + request.getStatus());
        return;
    }
    
    int response = JOptionPane.showConfirmDialog(this, 
        "Are you sure you want to cancel this request?", 
        "Confirm Cancellation", 
        JOptionPane.YES_NO_OPTION);
        
    if(response == JOptionPane.YES_OPTION) {
        request.setStatus("Cancelled");
        populateTable();
        JOptionPane.showMessageDialog(this, "Request cancelled successfully!");
    }
    }//GEN-LAST:event_btnDeleteReqActionPerformed

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
                populateTable();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        container.remove(this);
        CardLayout layout = (CardLayout) container.getLayout();
        layout.previous(container);

    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnDeleteReq;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton buttonUpdateReq;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblDrugRequests;
    // End of variables declaration//GEN-END:variables


     private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblDrugRequests.getModel();
        model.setRowCount(0);
        
        for(WorkRequest request : organization.getWorkRequestList().getWorkRequests()) {
            if(request instanceof DrugProductionRequest) {
                DrugProductionRequest dr = (DrugProductionRequest) request;
                Object[] row = new Object[6];
                row[0] = dr;
                row[1] = dr.getDrugName();
                row[2] = dr.getQuantity();
                row[3] = dr.getUrgency();
                row[4] = dr.getStatus();
                row[5] = dr.getDateOfRequest();
                model.addRow(row);
            }
        }
    }
    
}
