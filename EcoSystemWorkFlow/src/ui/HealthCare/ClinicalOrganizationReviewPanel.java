    /*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.HealthCare;

import ecosystemworkflow.EcoSystem;
import ecosystemworkflow.Enterprise.Enterprise;
import ecosystemworkflow.Enterprise.ResearchAndDevelopmentEnterprise;
import ecosystemworkflow.Network.Network;
import ecosystemworkflow.Organization.ClinicalTrialsManagementOrganization;
import ecosystemworkflow.Organization.Organization;
import ecosystemworkflow.UserAccount.UserAccount;
import ecosystemworkflow.WorkFlow.ClinicalTrialProtocolRequest;
import ecosystemworkflow.WorkFlow.WorkRequest;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author gunav
 */
public class ClinicalOrganizationReviewPanel  extends javax.swing.JPanel {

    /**
     * Creates new form ClinicalTrialsManagementJPanel
     */
      private UserAccount userAccount;
    private Organization organization;
    private JPanel container;
    private Enterprise enterprise;
    private EcoSystem system;
    
    public ClinicalOrganizationReviewPanel (JPanel container, UserAccount account, 
            Organization organization, Enterprise enterprise, EcoSystem system) {
        initComponents();
        this.container = container;
        this.userAccount = account;
        this.organization = organization;
        this.enterprise = enterprise;
        this.system = system;
        populateTable();
    }
    
    private void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblTrialRequests.getModel();
        model.setRowCount(0);
        
        System.out.println("Organization: " + organization.getClass().getName());
        System.out.println("Work Requests: " + organization.getWorkRequestList().getWorkRequests().size());
        
        for(WorkRequest request : organization.getWorkRequestList().getWorkRequests()) {
            if(request instanceof ClinicalTrialProtocolRequest) {
                ClinicalTrialProtocolRequest tr = (ClinicalTrialProtocolRequest) request;
                Object[] row = new Object[8];
                row[0] = tr;
                row[1] = tr.getProtocolId();
                row[2] = tr.getTrialName();
                row[3] = tr.getDrugName();
                row[4] = tr.getRequiredPatients();
                row[5] = tr.getPhase();
                row[6] = tr.getStudyType();
                row[7] = tr.getStatus();
                model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTrialRequests = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblTrialRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Trail ID", "Protocol ID", "Trail Name", "Drug Name", "Required Patients", "Phase", "Study Type", "Status"
            }
        ));
        jScrollPane1.setViewportView(tblTrialRequests);

        jScrollPane2.setViewportView(jScrollPane1);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(27, 145, 781, 128));

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton1.setText("Process ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(719, 291, -1, -1));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Clinical Organization Review");
        jLabel7.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 10, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/images/Untitled design (1).jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-2, -4, 850, 570));
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
       int selectedRow = tblTrialRequests.getSelectedRow();
        if(selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a trial request");
            return;
        }
        
        ClinicalTrialProtocolRequest request = (ClinicalTrialProtocolRequest)tblTrialRequests.getValueAt(selectedRow, 0);
        
        // Show review dialog
        int response = JOptionPane.showConfirmDialog(null, 
            "Protocol Review\n\n" +
            "Trial Name: " + request.getTrialName() + "\n" +
            "Drug: " + request.getDrugName() + "\n" +
            "Phase: " + request.getPhase() + "\n\n" +
            "Approve this protocol?",
            "Protocol Review",
            JOptionPane.YES_NO_OPTION
        );
        
        if(response == JOptionPane.YES_OPTION) {
            request.setStatus("Protocol Approved");
            Organization trialMgmtOrg = findTrialManagementOrg();
            if(trialMgmtOrg != null) {
                trialMgmtOrg.getWorkRequestList().addWorkRequest(request);
                JOptionPane.showMessageDialog(null, "Protocol approved and forwarded to Trial Management");
            }
        } else {
            request.setStatus("Protocol Rejected");
            String reason = JOptionPane.showInputDialog("Enter rejection reason:");
            if(reason != null && !reason.trim().isEmpty()) {
                request.setMessage("Rejected: " + reason);
            }
        }
        populateTable();
        
    
        
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblTrialRequests;
    // End of variables declaration//GEN-END:variables

        private Organization findTrialManagementOrg() {

            for(Network network : system.getNetworks()) {
            for(Enterprise ent : network.getEnterprises().getEnterpriseList()) {
                if(ent instanceof ResearchAndDevelopmentEnterprise) {
                    for(Organization org : ent.getOrganizationDirectory().getOrganizations()) {
                        if(org instanceof ClinicalTrialsManagementOrganization) {
                            return org;
                        }
                    }
                }
            }
        }
        return null;
    }
}
