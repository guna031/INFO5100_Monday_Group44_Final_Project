/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.HealthCare.User.Blood;

import ecosystemworkflow.EcoSystem;
import ecosystemworkflow.Enterprise.Enterprise;
import ecosystemworkflow.Network.Network;
import ecosystemworkflow.Organization.Organization;
import ecosystemworkflow.Organization.TransportOrganization;
import ecosystemworkflow.UserAccount.UserAccount;
import ecosystemworkflow.WorkFlow.BloodSupplyRequest;
import ecosystemworkflow.WorkFlow.TransportOrganizationRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author gunav
 */
public class BloodQualityTestingJPanel extends javax.swing.JPanel {

    /**
     * Creates new form BloodQualityTestingJPanel
     */
    private UserAccount userAccount;
    private Organization organization;
    private JPanel container;
    private BloodSupplyRequest request;
    private EcoSystem system;
    
    public BloodQualityTestingJPanel(JPanel container, UserAccount account, 
            Organization organization, BloodSupplyRequest request, EcoSystem system) {
        initComponents();
        this.container = container;
        this.userAccount = account;
        this.organization = organization;
        this.request = request;
        this.system = system;
        populateRequestDetails();
    }
    
      
    private void populateRequestDetails() {
        txtBloodType.setText(request.getBloodType());
        txtQuantity.setText(String.valueOf(request.getQuantity()));
        txtTemperature.setText(String.valueOf(request.getTemperature()));
        txtStorageReq.setText(request.getStorageRequirements());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtBloodType = new javax.swing.JTextField();
        lblQuantity = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        lblQuantity1 = new javax.swing.JLabel();
        txtTemperature = new javax.swing.JTextField();
        lblStorageReq = new javax.swing.JLabel();
        txtStorageReq = new javax.swing.JTextField();
        btnProcess = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtComments = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        chkPassed = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel1.setText("Blood Type:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(189, 128, -1, -1));

        txtBloodType.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));
        add(txtBloodType, new org.netbeans.lib.awtextra.AbsoluteConstraints(264, 125, 150, -1));

        lblQuantity.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        lblQuantity.setText("Quantity: ");
        add(lblQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 170, -1, -1));

        txtQuantity.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));
        add(txtQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(264, 167, 150, -1));

        lblQuantity1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        lblQuantity1.setText("Temperature:");
        add(lblQuantity1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 210, 90, -1));

        txtTemperature.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));
        add(txtTemperature, new org.netbeans.lib.awtextra.AbsoluteConstraints(264, 207, 150, -1));

        lblStorageReq.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        lblStorageReq.setText("Storage Requirement: ");
        add(lblStorageReq, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 250, -1, -1));

        txtStorageReq.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));
        add(txtStorageReq, new org.netbeans.lib.awtextra.AbsoluteConstraints(264, 247, 150, -1));

        btnProcess.setBackground(new java.awt.Color(255, 255, 255));
        btnProcess.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnProcess.setText("Process");
        btnProcess.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessActionPerformed(evt);
            }
        });
        add(btnProcess, new org.netbeans.lib.awtextra.AbsoluteConstraints(331, 391, -1, -1));

        txtComments.setColumns(20);
        txtComments.setRows(5);
        txtComments.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white, java.awt.Color.white));
        jScrollPane1.setViewportView(txtComments);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(264, 287, -1, -1));

        jLabel2.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jLabel2.setText("Comments:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 287, -1, -1));

        chkPassed.setBackground(new java.awt.Color(255, 255, 255));
        chkPassed.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        chkPassed.setText("QA Passed");
        chkPassed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkPassedActionPerformed(evt);
            }
        });
        add(chkPassed, new org.netbeans.lib.awtextra.AbsoluteConstraints(432, 124, -1, -1));

        jLabel7.setFont(new java.awt.Font("Calibri", 1, 36)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Blood Bank");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 13, 169, -1));

        jLabel4.setFont(new java.awt.Font("Calibri", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Quality Testing");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(264, 70, 154, -1));

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/images/Untitled design (4).jpg"))); // NOI18N
        jLabel3.setText("jLabel3");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1020, 650));
    }// </editor-fold>//GEN-END:initComponents

    private void btnProcessActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessActionPerformed
        // TODO add your handling code here:
        if(txtComments.getText().trim().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Please add testing comments");
            return;
        }

        try {
            request.setPatientCondition(txtComments.getText().trim());
            request.setTemperature(Double.parseDouble(txtTemperature.getText()));
            request.setStorageRequirements(txtStorageReq.getText());
            request.setStatus(chkPassed.isSelected() ? "QA Passed" : "Failed");

            if(chkPassed.isSelected()) {
                TransportOrganizationRequest transportRequest = new TransportOrganizationRequest();
                transportRequest.setMessage("Transport for Blood Type: " + request.getBloodType());
                transportRequest.setSender(userAccount);
                transportRequest.setItemType("Blood");
                transportRequest.setQuantity(request.getQuantity());
                transportRequest.setStatus("Pending Pickup");
                transportRequest.setRequiresRefrigeration(true);

                Organization transportOrg = null;
                for(Network network : system.getNetworks()) {
                    for(Enterprise ent : network.getEnterprises().getEnterpriseList()) {
                        for(Organization org : ent.getOrganizationDirectory().getOrganizations()) {
                            if(org instanceof TransportOrganization) {
                                transportOrg = org;
                                break;
                            }
                        }
                    }
                }

                if(transportOrg != null) {
                    transportOrg.getWorkRequestList().addWorkRequest(transportRequest);
                    request.setStatus("Awaiting Transport");
                    JOptionPane.showMessageDialog(null, "QA Passed - Transport request created");
                }
            }

            container.remove(this);
            CardLayout layout = (CardLayout) container.getLayout();
            layout.previous(container);

        } catch(Exception e) {
            JOptionPane.showMessageDialog(null, "Error processing request: " + e.getMessage());
        }
    }//GEN-LAST:event_btnProcessActionPerformed

    private void chkPassedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkPassedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkPassedActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnProcess;
    private javax.swing.JCheckBox chkPassed;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblQuantity;
    private javax.swing.JLabel lblQuantity1;
    private javax.swing.JLabel lblStorageReq;
    private javax.swing.JTextField txtBloodType;
    private javax.swing.JTextArea txtComments;
    private javax.swing.JTextField txtQuantity;
    private javax.swing.JTextField txtStorageReq;
    private javax.swing.JTextField txtTemperature;
    // End of variables declaration//GEN-END:variables
}
