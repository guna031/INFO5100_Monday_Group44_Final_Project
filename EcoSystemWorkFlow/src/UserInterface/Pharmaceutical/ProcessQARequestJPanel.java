    /*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UserInterface.Pharmaceutical;

import ecosystemworkflow.EcoSystem;
import ecosystemworkflow.Enterprise.Enterprise;
import ecosystemworkflow.Organization.Organization;
import ecosystemworkflow.Organization.TransportOrganization;
import ecosystemworkflow.Role.LogisticsCoordinatorRole;
import static ecosystemworkflow.Role.Role.RoleType.LogisticsCoordinatorRole;
import ecosystemworkflow.UserAccount.UserAccount;
import ecosystemworkflow.WorkFlow.QualityControlAndAssuranceRequest;
import ecosystemworkflow.WorkFlow.TransportOrganizationRequest;
import java.awt.CardLayout;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author gunav
 */
public class ProcessQARequestJPanel extends javax.swing.JPanel {

    /**
     * Creates new form ProcessQARequestJPanel
     */
    private UserAccount userAccount;
    private Organization organization;
    private Enterprise enterprise;
    private EcoSystem system;
    private JPanel container;
    private QualityControlAndAssuranceRequest request;
    
    public ProcessQARequestJPanel(JPanel container, UserAccount account, 
            Organization organization, Enterprise enterprise, EcoSystem system,
            QualityControlAndAssuranceRequest request) {
        initComponents();
        this.container = container;
        this.userAccount = account;
        this.organization = organization;
        this.enterprise = enterprise;
        this.system = system;
        this.request = request;
        
        setupComponents();
        populateRequestDetails();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtBatchNum = new javax.swing.JTextField();
        lblStatus = new javax.swing.JLabel();
        labelDrugName = new javax.swing.JLabel();
        txtDrugName = new javax.swing.JTextField();
        txtStatus = new javax.swing.JTextField();
        labelQuantity = new javax.swing.JLabel();
        lblBatchNum = new javax.swing.JLabel();
        txtBatchSize = new javax.swing.JTextField();
        txtManufacturer = new javax.swing.JTextField();
        lblManufacturer = new javax.swing.JLabel();
        lblComments = new javax.swing.JLabel();
        cmbQuality = new javax.swing.JComboBox<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtCommentsArea = new javax.swing.JTextArea();
        lblQualityGrade = new javax.swing.JLabel();
        chkPassed = new javax.swing.JCheckBox();
        btnUpdateStatus = new javax.swing.JButton();

        txtBatchNum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBatchNumActionPerformed(evt);
            }
        });

        lblStatus.setText("Status");

        labelDrugName.setText("Drug Name:");

        txtDrugName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDrugNameActionPerformed(evt);
            }
        });

        labelQuantity.setText("Batch Size:");

        lblBatchNum.setText("Batch Number:");

        txtBatchSize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBatchSizeActionPerformed(evt);
            }
        });

        lblManufacturer.setText("Manufacturer:");

        lblComments.setText("Comments:");

        cmbQuality.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        txtCommentsArea.setColumns(20);
        txtCommentsArea.setRows(5);
        jScrollPane1.setViewportView(txtCommentsArea);

        jScrollPane2.setViewportView(jScrollPane1);

        lblQualityGrade.setText("Quality Grade:");

        chkPassed.setText("pass");
        chkPassed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkPassedActionPerformed(evt);
            }
        });

        btnUpdateStatus.setText("update");
        btnUpdateStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateStatusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(256, 256, 256)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblManufacturer)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtManufacturer, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelDrugName)
                                .addGap(18, 18, 18)
                                .addComponent(txtDrugName, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblBatchNum)
                                .addGap(18, 18, 18)
                                .addComponent(txtBatchNum, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(labelQuantity)
                                .addGap(18, 18, 18)
                                .addComponent(txtBatchSize, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lblStatus)
                                .addGap(18, 18, 18)
                                .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblQualityGrade)
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cmbQuality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(chkPassed)
                                .addGap(8, 8, 8))
                            .addComponent(btnUpdateStatus))
                        .addGap(107, 107, 107))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(94, 94, 94)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblComments, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(271, 489, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(129, 129, 129)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBatchNum)
                    .addComponent(txtBatchNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbQuality, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblQualityGrade))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDrugName)
                    .addComponent(txtDrugName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelQuantity)
                    .addComponent(txtBatchSize, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkPassed))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnUpdateStatus)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblStatus)
                    .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblManufacturer)
                    .addComponent(txtManufacturer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblComments)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(208, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtBatchNumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBatchNumActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBatchNumActionPerformed

    private void txtDrugNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDrugNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDrugNameActionPerformed

    private void txtBatchSizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBatchSizeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBatchSizeActionPerformed

    private void chkPassedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkPassedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chkPassedActionPerformed

    private void btnUpdateStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateStatusActionPerformed
        // TODO add your handling code here:
//        try {
//        String comments = txtCommentsArea.getText().trim();
//        if(comments.isEmpty()) {
//            JOptionPane.showMessageDialog(this, "Please add inspection comments");
//            return;
//        }
//        
//        request.setInspectorComments(comments);
//        request.setQualityGrade(cmbQuality.getSelectedItem().toString());
//        request.setPassedQualityCheck(chkPassed.isSelected());
//        
//        if(request.isPassedQualityCheck()) {
//            // Create transport request
//            TransportOrganizationRequest transportRequest = new TransportOrganizationRequest(
//                "Transport request for QA passed drugs",
//                userAccount,
//                findTransportReceiver(),
//                "Drug",
//                request.getBatchSize(),
//                request.getSender().getEmployee().getLocation(),
//                findHospitalLocation()
//            );
//            
//            // Set additional details
////            transportRequest.setPriority(request.get());
//            transportRequest.setRequiresRefrigeration(true);
//            transportRequest.addSpecialHandlingInstruction("QA Grade: " + request.getQualityGrade());
//            transportRequest.addSpecialHandlingInstruction("Batch Number: " + request.getBatchNumber());
//            transportRequest.setPickupTime(new Date());
//            
//            // Add to transport organization work queue
//            Organization transportOrg = findTransportOrganization();
//            if(transportOrg != null) {
//                transportOrg.getWorkRequestList().addWorkRequest(transportRequest);
//                request.setStatus("Awaiting Transport");
//                JOptionPane.showMessageDialog(this, 
//                    "QA Passed - Transport request created successfully!");
//            } else {
//                JOptionPane.showMessageDialog(this, 
//                    "Error: Transport organization not found");
//                return;
//            }
//        } else {
//            request.setStatus("Failed QA Check");
//            JOptionPane.showMessageDialog(this, 
//                "QA Failed - Drug production needs revision");
//        }
//        
//        container.remove(this);
//        CardLayout layout = (CardLayout) container.getLayout();
//        layout.previous(container);
//        
//    } catch(Exception e) {
//        JOptionPane.showMessageDialog(this, "Error updating status: " + e.getMessage());
//    }
    
    
    
    }//GEN-LAST:event_btnUpdateStatusActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnUpdateStatus;
    private javax.swing.JCheckBox chkPassed;
    private javax.swing.JComboBox<String> cmbQuality;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelDrugName;
    private javax.swing.JLabel labelQuantity;
    private javax.swing.JLabel lblBatchNum;
    private javax.swing.JLabel lblComments;
    private javax.swing.JLabel lblManufacturer;
    private javax.swing.JLabel lblQualityGrade;
    private javax.swing.JLabel lblStatus;
    private javax.swing.JTextField txtBatchNum;
    private javax.swing.JTextField txtBatchSize;
    private javax.swing.JTextArea txtCommentsArea;
    private javax.swing.JTextField txtDrugName;
    private javax.swing.JTextField txtManufacturer;
    private javax.swing.JTextField txtStatus;
    // End of variables declaration//GEN-END:variables

    private void setupComponents() {
        txtBatchNum.setEditable(false);
        txtDrugName.setEditable(false);
        txtBatchSize.setEditable(false);
        txtStatus.setEditable(false);
        txtManufacturer.setEditable(false);
        
        DefaultComboBoxModel<String> gradeModel = new DefaultComboBoxModel<>();
        gradeModel.addElement("A");
        gradeModel.addElement("B");
        gradeModel.addElement("C");
        gradeModel.addElement("D");
        gradeModel.addElement("F");
        cmbQuality.setModel(gradeModel);
    }
    
    private void populateRequestDetails() {
        txtBatchNum.setText(request.getBatchNumber());
        txtDrugName.setText(request.getDrugName());
        txtBatchSize.setText(String.valueOf(request.getBatchSize()));
        txtStatus.setText(request.getStatus());
        txtManufacturer.setText(request.getSender().getEmployee().getEmpolyeeName());
    }

    private Organization findTransportOrganization() {
    for(Organization org : enterprise.getOrganizationDirectory().getOrganizations()) {
        if(org instanceof TransportOrganization) {
            return org;
        }
    }
    return null;
}

private UserAccount findTransportReceiver() {
    Organization transportOrg = findTransportOrganization();
    if(transportOrg != null) {
        for(UserAccount account : transportOrg.getUserAccountDirectory().getUserAccountList()) {
            if(account.getRole() instanceof LogisticsCoordinatorRole) {
                return account;
            }
        }
    }
    return null;
}

private String findHospitalLocation() {
    // Get hospital location from the original drug request sender
    return request.getSender().getOrganization().getLocation();
}
    
    
    
}
